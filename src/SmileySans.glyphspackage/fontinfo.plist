{
.appVersion = "3241";
.formatVersion = 3;
classes = (
{
code = "zero
one
two
three
four
five
six
seven
eight
nine
zero.case
one.case
two.case
three.case
four.case
five.case
six.case
seven.case
eight.case
nine.case
zero.tf
one.tf
two.tf
three.tf
four.tf
five.tf
six.tf
seven.tf
eight.tf
nine.tf
onehalf
onequarter
threequarters
";
name = Numbers;
},
{
code = "colon.number
plus.number
minus.number
multiply.number
equal.number
greater.number
less.number
plusminus.number
approxequal.number
asciitilde.number
divide.number
notequal.number
hyphen.number
";
name = SymbolFlex.number;
},
{
code = "colon
plus
minus
multiply
equal
greater
less
plusminus
approxequal
asciitilde
divide
notequal
hyphen
";
name = SymbolFlex;
},
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adieresis Adotbelow Agrave Ahookabove Amacron Aogonek Aring Atilde AE B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Dcaron Dcroat Eth E Eacute Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edieresis Edotaccent Edotbelow Egrave Ehookabove Emacron Eogonek Etilde Schwa F G Gbreve Gcircumflex Gcommaaccent Gdotaccent Gmacron H Hbar Hcircumflex I IJ Iacute Icaron Icircumflex Idieresis Idotaccent Idotbelow Igrave Ihookabove Imacron Iogonek Itilde J Jacute Jcircumflex K Kcommaaccent L Lacute Lcaron Lcommaaccent Lslash M N Nacute Ncaron Ncommaaccent Ntilde O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odieresis Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Omacron Oslash Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scircumflex Scommaaccent Germandbls T Tcaron Tcedilla Tcommaaccent U Uacute Ubreve Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ytilde Z Zacute Zcaron Zdotaccent A.full B.full C.full D.full E.full F.full G.full H.full I.full J.full K.full L.full M.full N.full O.full P.full Q.full R.full S.full T.full U.full V.full W.full X.full Y.full Z.full Lcommaaccent.loclMAH Ncommaaccent.loclMAH J.ss01 K.ss01 Q.ss01 A-cy Be-cy Ve-cy Ge-cy Geupturn-cy De-cy Ie-cy Iegrave-cy Io-cy Zhe-cy Ze-cy Ii-cy Iishort-cy Iigrave-cy Ka-cy El-cy Em-cy En-cy O-cy Pe-cy Er-cy Es-cy Te-cy U-cy Ushort-cy Ef-cy Ha-cy Che-cy Tse-cy Sha-cy Shcha-cy Softsign-cy Yeru-cy Hardsign-cy E-cy Ereversed-cy I-cy Yi-cy Yu-cy Ya-cy Alpha Beta Gamma Delta Epsilon Zeta Eta Theta Iota Kappa Lambda Mu Nu Xi Omicron Pi Rho Sigma Tau Upsilon Phi Chi Psi Omega Alphatonos Epsilontonos Etatonos Iotatonos Omicrontonos Upsilontonos Omegatonos Iotadieresis Upsilondieresis Sampi";
name = Uppercase;
},
{
code = "i
idotless
iacute
icaron
icircumflex
idieresis
idotaccent
idotbelow
igrave
ihookabove
imacron
iogonek
itilde
ij
j
jdotless
jacute
jcircumflex
t
tbar
tcaron
tcedilla
tcommaaccent";
name = ITGroup;
}
);
customParameters = (
{
name = unicodeRanges;
value = (
0,
1,
7,
9,
49,
50,
59
);
},
{
name = codePageRanges;
value = (
"1252",
"1250",
"1251",
"1253",
"936"
);
},
{
name = "Guides Palette Config";
value = {
showAngle = 1;
showCoordinates = 1;
sortBy = "";
tagPrefix = guide_;
};
}
);
date = "2022-11-11 15:33:37 +0000";
familyName = "Smiley Sans";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn MAH;
languagesystem latn NLD;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature sups;
feature frac;
feature ordn;
feature pnum;
feature tnum;
feature case;
feature fwid;
feature vert;
feature vrt2;
feature ss01;
feature ss02;
feature calt;
";
tag = aalt;
},
{
code = "lookup ccmp_Other_1 {
	lookupflag 0;
	@Markscomb = [brevecomb-cy tonos];
	@MarkscombCase = [brevecomb-cy.case tonos.case];
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	lookupflag 0;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

sub emdash emdash by twoemdash;
sub S H D zero zero numbersign by heartBlackSuit;
";
tag = ccmp;
},
{
automatic = 1;
code = "script latn;
language AZE;
lookup locl_latn_0 {
	sub i by idotaccent;
} locl_latn_0;
language CRT;
lookup locl_latn_0;
language KAZ;
lookup locl_latn_0;
language TAT;
lookup locl_latn_0;
language TRK;
lookup locl_latn_0;

script latn;
language ROM;
lookup locl_latn_1 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;
language MOL;
lookup locl_latn_1;

script latn;
language MAH;
lookup locl_latn_2 {
	sub Lcommaaccent by Lcommaaccent.loclMAH;
	sub Ncommaaccent by Ncommaaccent.loclMAH;
	sub lcommaaccent by lcommaaccent.loclMAH;
	sub ncommaaccent by ncommaaccent.loclMAH;
} locl_latn_2;

script latn;
language NLD;
lookup locl_latn_3 {
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_3;
";
tag = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
";
tag = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;
sub one slash two by onehalf;
sub three slash four by threequarters;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;
";
tag = ordn;
},
{
automatic = 1;
code = "sub zero.tf by zero;
sub one.tf by one;
sub two.tf by two;
sub three.tf by three;
sub four.tf by four;
sub five.tf by five;
sub six.tf by six;
sub seven.tf by seven;
sub eight.tf by eight;
sub nine.tf by nine;
";
tag = pnum;
},
{
automatic = 1;
code = "sub zero by zero.tf;
sub one by one.tf;
sub two by two.tf;
sub three by three.tf;
sub four by four.tf;
sub five by five.tf;
sub six by six.tf;
sub seven by seven.tf;
sub eight by eight.tf;
sub nine by nine.tf;
";
tag = tnum;
},
{
code = "sub zero by zero.case;
sub one by one.case;
sub two by two.case;
sub three by three.case;
sub four by four.case;
sub five by five.case;
sub six by six.case;
sub seven by seven.case;
sub eight by eight.case;
sub nine by nine.case;
";
tag = case;
},
{
automatic = 1;
code = "sub A by A.full;
sub B by B.full;
sub C by C.full;
sub D by D.full;
sub E by E.full;
sub F by F.full;
sub G by G.full;
sub H by H.full;
sub I by I.full;
sub J by J.full;
sub K by K.full;
sub L by L.full;
sub M by M.full;
sub N by N.full;
sub O by O.full;
sub P by P.full;
sub Q by Q.full;
sub R by R.full;
sub S by S.full;
sub T by T.full;
sub U by U.full;
sub V by V.full;
sub W by W.full;
sub X by X.full;
sub Y by Y.full;
sub Z by Z.full;
sub a by a.full;
sub b by b.full;
sub c by c.full;
sub d by d.full;
sub e by e.full;
sub f by f.full;
sub g by g.full;
sub h by h.full;
sub i by i.full;
sub j by j.full;
sub k by k.full;
sub l by l.full;
sub m by m.full;
sub n by n.full;
sub o by o.full;
sub p by p.full;
sub q by q.full;
sub r by r.full;
sub s by s.full;
sub t by t.full;
sub u by u.full;
sub v by v.full;
sub w by w.full;
sub x by x.full;
sub y by y.full;
sub z by z.full;
sub zero by zero.full;
sub one by one.full;
sub two by two.full;
sub three by three.full;
sub four by four.full;
sub five by five.full;
sub six by six.full;
sub seven by seven.full;
sub eight by eight.full;
sub nine by nine.full;
sub ampersand by ampersand.full;
sub asterisk by asterisk.full;
sub at by at.full;
sub backslash by backslash.full;
sub colon by colon.full;
sub comma by comma.full;
sub exclam by exclam.full;
sub numbersign by numbersign.full;
sub percent by percent.full;
sub period by period.full;
sub question by question.full;
sub quotedbl by quotedbl.full;
sub quotesingle by quotesingle.full;
sub semicolon by semicolon.full;
sub slash by slash.full;
sub underscore by underscore.full;
sub hyphen by hyphen.full;
sub braceleft by braceleft.full;
sub braceright by braceright.full;
sub bracketleft by bracketleft.full;
sub bracketright by bracketright.full;
sub parenleft by parenleft.full;
sub parenright by parenright.full;
sub asciicircum by asciicircum.full;
sub grave by grave.full;
sub macron by macron.full;
sub brokenbar by brokenbar.full;
sub cent by cent.full;
sub dollar by dollar.full;
sub sterling by sterling.full;
sub yen by yen.full;
sub asciitilde by asciitilde.full;
sub bar by bar.full;
sub equal by equal.full;
sub greater by greater.full;
sub less by less.full;
sub logicalnot by logicalnot.full;
sub plus by plus.full;
";
tag = fwid;
},
{
automatic = 1;
code = "sub comma-han by comma-han.vert;
sub period-han by period-han.vert;
sub colon by colon.vert;
sub ellipsis by ellipsis.vert;
sub exclam by exclam.vert;
sub question by question.vert;
sub semicolon by semicolon.vert;
sub comma.full by comma.full.vert;
sub underscore.full by underscore.full.vert;
sub emdash by emdash.vert;
sub twoemdash by twoemdash.vert;
sub anglebracketleft by anglebracketleft.vert;
sub anglebracketright by anglebracketright.vert;
sub blacklenticularbracketleft by blacklenticularbracketleft.vert;
sub blacklenticularbracketright by blacklenticularbracketright.vert;
sub cornerbracketleft by cornerbracketleft.vert;
sub cornerbracketright by cornerbracketright.vert;
sub dblanglebracketleft by dblanglebracketleft.vert;
sub dblanglebracketright by dblanglebracketright.vert;
sub tortoiseshellbracketleft by tortoiseshellbracketleft.vert;
sub tortoiseshellbracketright by tortoiseshellbracketright.vert;
sub whitecornerbracketleft by whitecornerbracketleft.vert;
sub whitecornerbracketright by whitecornerbracketright.vert;
sub whitelenticularbracketleft by whitelenticularbracketleft.vert;
sub whitelenticularbracketright by whitelenticularbracketright.vert;
sub braceleft.full by braceleft.full.vert;
sub braceright.full by braceright.full.vert;
sub parenleft.full by parenleft.full.vert;
sub parenright.full by parenright.full.vert;
sub prolonged-kana by prolonged-kana.vert;
";
tag = vert;
},
{
automatic = 1;
code = "sub comma-han by comma-han.vert;
sub period-han by period-han.vert;
sub colon by colon.vert;
sub ellipsis by ellipsis.vert;
sub exclam by exclam.vert;
sub question by question.vert;
sub semicolon by semicolon.vert;
sub comma.full by comma.full.vert;
sub underscore.full by underscore.full.vert;
sub emdash by emdash.vert;
sub twoemdash by twoemdash.vert;
sub anglebracketleft by anglebracketleft.vert;
sub anglebracketright by anglebracketright.vert;
sub blacklenticularbracketleft by blacklenticularbracketleft.vert;
sub blacklenticularbracketright by blacklenticularbracketright.vert;
sub cornerbracketleft by cornerbracketleft.vert;
sub cornerbracketright by cornerbracketright.vert;
sub dblanglebracketleft by dblanglebracketleft.vert;
sub dblanglebracketright by dblanglebracketright.vert;
sub tortoiseshellbracketleft by tortoiseshellbracketleft.vert;
sub tortoiseshellbracketright by tortoiseshellbracketright.vert;
sub whitecornerbracketleft by whitecornerbracketleft.vert;
sub whitecornerbracketright by whitecornerbracketright.vert;
sub whitelenticularbracketleft by whitelenticularbracketleft.vert;
sub whitelenticularbracketright by whitelenticularbracketright.vert;
sub braceleft.full by braceleft.full.vert;
sub braceright.full by braceright.full.vert;
sub parenleft.full by parenleft.full.vert;
sub parenright.full by parenright.full.vert;
sub prolonged-kana by prolonged-kana.vert;
";
tag = vrt2;
},
{
automatic = 1;
code = "sub J by J.ss01;
sub K by K.ss01;
sub Q by Q.ss01;
sub a by a.ss01;
sub f by f.ss01;
sub l by l.ss01;
sub r by r.ss01;
sub ampersand by ampersand.ss01;
sub numero by numero.ss01;
";
tag = ss01;
},
{
automatic = 1;
code = "sub f by f.ss02;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss02;
},
{
code = "# Alter symbol after uppercase and numbers by a upper version
sub [@Numbers @Uppercase] @SymbolFlex' [@Numbers @Uppercase] by @SymbolFlex.number;

# Alter f before i, (j) and t group by f with longer bar
sub f' @ITGroup by f.before-it;

# Alter t before i, (j) and t group by t with longer bar
sub t' @ITGroup by t.before-it;
";
tag = calt;
}
);
fontMaster = (
{
customParameters = (
{
name = "Master Icon Glyph Name";
value = uni7535;
}
);
guides = (
{
filter = "tags CONTAINS \"guide_heng\"";
lockAngle = 1;
pos = (979,897);
showMeasurement = 1;
},
{
angle = 90;
filter = "tags CONTAINS \"guide_heng\"";
lockAngle = 1;
pos = (924,936);
showMeasurement = 1;
},
{
locked = 1;
pos = (63,888);
},
{
locked = 1;
pos = (63,-102);
},
{
locked = 1;
pos = (347,-80);
},
{
locked = 1;
pos = (449,856);
},
{
angle = 84;
locked = 1;
pos = (83,206);
},
{
angle = 84;
locked = 1;
pos = (769,39);
},
{
locked = 1;
pos = (468,900);
},
{
angle = 84;
locked = 1;
pos = (0,177);
},
{
angle = 84;
locked = 1;
pos = (42,198);
},
{
angle = 84;
locked = 1;
pos = (746,180);
},
{
angle = 84;
locked = 1;
pos = (760,592);
},
{
locked = 1;
pos = (787,-58);
},
{
angle = 84;
locked = 1;
pos = (476,958);
}
);
id = m01;
metricValues = (
{
over = 10;
pos = 810;
},
{
over = 10;
pos = 778;
},
{
over = 10;
pos = 580;
},
{
pos = -30;
},
{
over = -10;
pos = -230;
},
{
pos = 900;
},
{
pos = -100;
},
{
pos = 900;
},
{
pos = -100;
},
{
pos = 8;
},
{
pos = 6;
},
{
pos = 6;
},
{
over = -10;
pos = -30;
},
{
over = 10;
pos = 768;
},
{
pos = 8;
},
{
pos = 8;
}
);
name = Oblique;
userData = {
GSCornerRadius = 40;
GSOffsetHorizontal = 3;
GSOffsetKeepCompatible = 1;
GSOffsetVertical = 3;
};
visible = 1;
}
);
instances = (
{
customParameters = (
{
name = "Name Table Entry";
value = "1 3 1 2052; 得意黑";
},
{
name = "Name Table Entry";
value = "4 3 1 2052; 得意黑 斜体";
}
);
instanceInterpolations = {
m01 = 1;
};
name = Oblique;
properties = (
{
key = styleNames;
values = (
{
language = dflt;
value = Oblique;
},
{
language = ZHS;
value = "斜体";
}
);
}
);
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 20;
"@MMK_R_Che-cy" = -60;
"@MMK_R_Ef-cy" = -50;
"@MMK_R_H" = 0;
"@MMK_R_O" = -20;
"@MMK_R_S" = -10;
"@MMK_R_T" = -70;
"@MMK_R_U" = -20;
"@MMK_R_V" = -60;
"@MMK_R_Y" = -70;
"@MMK_R_Z" = 10;
"@MMK_R_de-cy" = 20;
"@MMK_R_f" = -20;
"@MMK_R_g" = -10;
"@MMK_R_o" = -10;
"@MMK_R_t" = -10;
"@MMK_R_te-cy" = -20;
"@MMK_R_v" = -20;
"Hardsign-cy" = -40;
};
"@MMK_L_B" = {
"@MMK_R_Che-cy" = -30;
"@MMK_R_De-cy" = -20;
"@MMK_R_T" = -80;
"@MMK_R_U-cy" = -20;
"@MMK_R_V" = -40;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -40;
"@MMK_R_Z" = 0;
"@MMK_R_Zhe-cy" = -10;
"@MMK_R_de-cy" = -10;
"@MMK_R_te-cy" = -30;
"@MMK_R_v" = -20;
"@MMK_R_x" = -20;
"@MMK_R_zhe-cy" = -10;
"Hardsign-cy" = -50;
};
"@MMK_L_Be-cy" = {
"@MMK_R_de-cy" = -10;
};
"@MMK_L_C" = {
"@MMK_R_Ef-cy" = -20;
"@MMK_R_O" = 0;
"@MMK_R_Y" = -20;
"@MMK_R_amper" = -10;
"@MMK_R_o" = -10;
};
"@MMK_L_De-cy" = {
"@MMK_R_Che-cy" = -20;
"@MMK_R_De-cy" = 20;
"@MMK_R_O" = -20;
"@MMK_R_V" = -10;
"@MMK_R_Y" = -10;
"@MMK_R_el-cy" = 20;
"@MMK_R_o" = -10;
};
"@MMK_L_E" = {
"@MMK_R_A" = 10;
"@MMK_R_O" = -10;
"@MMK_R_T" = 10;
"@MMK_R_X" = 20;
"@MMK_R_Z" = 20;
"@MMK_R_z" = 10;
};
"@MMK_L_Ef-cy" = {
"@MMK_R_A" = -20;
"@MMK_R_De-cy" = -70;
"@MMK_R_H" = -10;
"@MMK_R_T" = -80;
"@MMK_R_U-cy" = -60;
"@MMK_R_X" = -60;
"@MMK_R_Z" = -40;
"@MMK_R_Ze-cy" = -30;
"@MMK_R_Zhe-cy" = -70;
"@MMK_R_de-cy" = -60;
"@MMK_R_el-cy" = -40;
"@MMK_R_x" = -20;
"@MMK_R_zhe-cy" = -20;
Upsilon = -80;
};
"@MMK_L_F" = {
"@MMK_R_A" = -40;
"@MMK_R_O" = -10;
"@MMK_R_T" = 20;
"@MMK_R_V" = 10;
"@MMK_R_X" = 20;
"@MMK_R_Y" = 10;
"@MMK_R_Z" = 20;
"@MMK_R_amper" = -20;
"@MMK_R_g" = -10;
"@MMK_R_o" = -30;
"@MMK_R_s" = -20;
"@MMK_R_x" = -10;
};
"@MMK_L_G" = {
"@MMK_R_A" = 10;
"@MMK_R_T" = -40;
"@MMK_R_V" = -30;
"@MMK_R_n" = 7;
"@MMK_R_v" = -20;
};
"@MMK_L_Ge-cy" = {
"@MMK_R_A" = -70;
"@MMK_R_De-cy" = -90;
"@MMK_R_Ef-cy" = -80;
"@MMK_R_O" = -20;
"@MMK_R_Omega" = -30;
"@MMK_R_che-cy" = -10;
"@MMK_R_chi" = -20;
"@MMK_R_de-cy" = -30;
"@MMK_R_el-cy" = -50;
"@MMK_R_epsilon" = -50;
"@MMK_R_ereversed-cy" = -20;
"@MMK_R_iota" = -20;
"@MMK_R_n" = -60;
"@MMK_R_o" = -70;
"@MMK_R_omega" = -20;
"@MMK_R_rho" = -50;
"@MMK_R_tau" = -20;
"@MMK_R_theta" = -10;
"@MMK_R_v" = -30;
"@MMK_R_xi" = -30;
"@MMK_R_zhe-cy" = -10;
"A-cy" = -70;
mu = -40;
omicron = -40;
};
"@MMK_L_H" = {
"@MMK_R_De-cy" = -10;
"@MMK_R_Ef-cy" = -10;
"@MMK_R_T" = -20;
"@MMK_R_X" = -10;
"@MMK_R_chi" = -10;
"@MMK_R_g" = -10;
"@MMK_R_o" = -10;
"@MMK_R_v" = -10;
"@MMK_R_x" = -10;
"@MMK_R_z" = -20;
};
"@MMK_L_J" = {
"@MMK_R_Y" = -10;
};
"@MMK_L_K" = {
"@MMK_R_Che-cy" = -10;
"@MMK_R_O" = -40;
"@MMK_R_S" = -10;
"@MMK_R_V" = 0;
"@MMK_R_amper" = -20;
"@MMK_R_che-cy" = -60;
"@MMK_R_ereversed-cy" = -20;
"@MMK_R_g" = -30;
"@MMK_R_n" = -20;
"@MMK_R_o" = -30;
"@MMK_R_rho" = -10;
"@MMK_R_s" = -20;
"@MMK_R_t" = -20;
"@MMK_R_v" = -50;
"hardsign-cy" = -30;
};
"@MMK_L_Ka-cy" = {
"@MMK_R_Ef-cy" = -70;
"@MMK_R_O" = -20;
"@MMK_R_Ze-cy" = 0;
"@MMK_R_o" = -30;
"@MMK_R_te-cy" = -10;
"@MMK_R_v" = -40;
};
"@MMK_L_L" = {
"@MMK_R_A" = 20;
"@MMK_R_H" = -10;
"@MMK_R_O" = -50;
"@MMK_R_S" = -30;
"@MMK_R_T" = -100;
"@MMK_R_U" = -30;
"@MMK_R_V" = -80;
"@MMK_R_Y" = -110;
"@MMK_R_Z" = 10;
"@MMK_R_amper" = -30;
"@MMK_R_o" = -30;
"@MMK_R_s" = -10;
"@MMK_R_t" = -20;
"@MMK_R_v" = -70;
};
"@MMK_L_O" = {
"@MMK_R_A" = 0;
"@MMK_R_De-cy" = -40;
"@MMK_R_S" = -10;
"@MMK_R_T" = -40;
"@MMK_R_V" = -13;
"@MMK_R_X" = -20;
"@MMK_R_Xi" = -10;
"@MMK_R_Y" = -30;
"@MMK_R_Z" = -10;
"@MMK_R_Zhe-cy" = -20;
"@MMK_R_amper" = -20;
"@MMK_R_de-cy" = -20;
"@MMK_R_el-cy" = -10;
"@MMK_R_lambda" = -20;
"@MMK_R_o" = -8;
"@MMK_R_s" = -10;
"@MMK_R_x" = -10;
"@MMK_R_z" = -10;
"Hardsign-cy" = -30;
};
"@MMK_L_Omega" = {
"@MMK_R_Psi" = -30;
"@MMK_R_T" = -50;
"@MMK_R_Y" = -30;
};
"@MMK_L_P" = {
"@MMK_R_A" = -50;
"@MMK_R_De-cy" = -90;
"@MMK_R_S" = -10;
"@MMK_R_T" = -20;
"@MMK_R_U-cy" = -20;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -20;
"@MMK_R_Z" = -20;
"@MMK_R_Zhe-cy" = -30;
"@MMK_R_amper" = -30;
"@MMK_R_o" = -20;
"@MMK_R_t" = 20;
};
"@MMK_L_Psi" = {
"@MMK_R_Omega" = -10;
};
"@MMK_L_Q" = {
"@MMK_R_A" = -20;
"@MMK_R_H" = -10;
"@MMK_R_O" = -10;
"@MMK_R_S" = -20;
"@MMK_R_T" = -50;
"@MMK_R_U" = -20;
"@MMK_R_V" = -30;
"@MMK_R_Y" = -40;
"@MMK_R_Z" = -10;
"@MMK_R_i" = -20;
"@MMK_R_n" = -11;
"@MMK_R_o" = -30;
};
"@MMK_L_R" = {
"@MMK_R_O" = -10;
"@MMK_R_S" = -10;
"@MMK_R_T" = -30;
"@MMK_R_V" = -20;
"@MMK_R_Y" = -30;
"@MMK_R_g" = -20;
"@MMK_R_o" = -20;
"@MMK_R_s" = -10;
};
"@MMK_L_S" = {
"@MMK_R_A" = -10;
"@MMK_R_H" = -10;
"@MMK_R_J" = -20;
"@MMK_R_O" = -20;
"@MMK_R_T" = -30;
"@MMK_R_V" = -30;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -40;
"@MMK_R_Z" = -10;
"@MMK_R_g" = -10;
"@MMK_R_i" = -20;
"@MMK_R_j" = -10;
"@MMK_R_l" = -20;
"@MMK_R_n" = -20;
"@MMK_R_o" = -20;
"@MMK_R_s" = -10;
"@MMK_R_t" = -20;
"@MMK_R_v" = -30;
"@MMK_R_z" = -10;
};
"@MMK_L_T" = {
"@MMK_R_A" = -70;
"@MMK_R_De-cy" = -70;
"@MMK_R_Ef-cy" = -70;
"@MMK_R_H" = -20;
"@MMK_R_O" = -20;
"@MMK_R_Omega" = -40;
"@MMK_R_S" = -10;
"@MMK_R_T" = 20;
"@MMK_R_U" = -10;
"@MMK_R_V" = 20;
"@MMK_R_X" = 20;
"@MMK_R_Y" = 20;
"@MMK_R_Ya-cy" = 0;
"@MMK_R_Z" = 20;
"@MMK_R_amper" = -30;
"@MMK_R_chi" = -50;
"@MMK_R_de-cy" = -70;
"@MMK_R_el-cy" = -50;
"@MMK_R_epsilon" = -30;
"@MMK_R_g" = -37;
"@MMK_R_l" = -20;
"@MMK_R_n" = -40;
"@MMK_R_o" = -60;
"@MMK_R_pi" = -10;
"@MMK_R_s" = -30;
"@MMK_R_tau" = -10;
"@MMK_R_v" = -10;
"@MMK_R_x" = -10;
"@MMK_R_ya-cy" = -40;
"@MMK_R_z" = -20;
"@MMK_R_ze-cy" = -30;
};
"@MMK_L_U" = {
"@MMK_R_A" = -10;
"@MMK_R_T" = -10;
};
"@MMK_L_U-cy" = {
"@MMK_R_A" = -50;
"@MMK_R_De-cy" = -80;
"@MMK_R_Ef-cy" = -40;
"@MMK_R_Ze-cy" = -20;
"@MMK_R_che-cy" = -20;
"@MMK_R_de-cy" = -100;
"@MMK_R_el-cy" = -100;
"@MMK_R_ereversed-cy" = -30;
"@MMK_R_n" = -30;
"@MMK_R_o" = -50;
"@MMK_R_s" = -40;
"@MMK_R_te-cy" = -10;
"@MMK_R_v" = -20;
"@MMK_R_x" = -20;
"@MMK_R_ya-cy" = -60;
"@MMK_R_ze-cy" = -30;
"@MMK_R_zhe-cy" = -40;
};
"@MMK_L_V" = {
"@MMK_R_A" = -40;
"@MMK_R_De-cy" = -70;
"@MMK_R_O" = -8;
"@MMK_R_S" = -20;
"@MMK_R_T" = 20;
"@MMK_R_V" = 20;
"@MMK_R_X" = 10;
"@MMK_R_Z" = 10;
"@MMK_R_amper" = -40;
"@MMK_R_g" = -20;
"@MMK_R_o" = -30;
"@MMK_R_s" = -20;
"@MMK_R_z" = -20;
};
"@MMK_L_X" = {
"@MMK_R_De-cy" = 0;
"@MMK_R_Ef-cy" = -70;
"@MMK_R_H" = -10;
"@MMK_R_O" = -20;
"@MMK_R_S" = -20;
"@MMK_R_T" = 0;
"@MMK_R_amper" = -30;
"@MMK_R_che-cy" = -30;
"@MMK_R_n" = -10;
"@MMK_R_o" = -20;
"@MMK_R_s" = -10;
"@MMK_R_t" = -20;
"@MMK_R_v" = -30;
"@MMK_R_ze-cy" = -10;
"hardsign-cy" = -10;
};
"@MMK_L_Xi" = {
"@MMK_R_O" = -10;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -40;
"@MMK_R_De-cy" = -60;
"@MMK_R_O" = -10;
"@MMK_R_Omega" = -10;
"@MMK_R_S" = -20;
"@MMK_R_T" = 20;
"@MMK_R_Z" = 10;
"@MMK_R_amper" = -50;
"@MMK_R_che-cy" = -10;
"@MMK_R_de-cy" = -70;
"@MMK_R_el-cy" = -60;
"@MMK_R_ereversed-cy" = -40;
"@MMK_R_g" = -50;
"@MMK_R_n" = -20;
"@MMK_R_o" = -40;
"@MMK_R_s" = -30;
"@MMK_R_v" = -20;
"@MMK_R_x" = -10;
"@MMK_R_ya-cy" = -30;
"@MMK_R_z" = -20;
eth = -30;
"hardsign-cy" = -10;
};
"@MMK_L_Z" = {
"@MMK_R_A" = 10;
"@MMK_R_Ef-cy" = -30;
"@MMK_R_O" = -10;
"@MMK_R_S" = -10;
"@MMK_R_T" = 10;
"@MMK_R_V" = 10;
"@MMK_R_amper" = -30;
"@MMK_R_chi" = -20;
"@MMK_R_o" = -20;
"@MMK_R_s" = -10;
"@MMK_R_tau" = -20;
};
"@MMK_L_Ze-cy" = {
"@MMK_R_De-cy" = -30;
"@MMK_R_U-cy" = -10;
"@MMK_R_Y" = -30;
"@MMK_R_de-cy" = -10;
};
"@MMK_L_amper" = {
"@MMK_R_O" = -10;
"@MMK_R_T" = -70;
"@MMK_R_U" = -10;
"@MMK_R_V" = -60;
"@MMK_R_Y" = -60;
};
"@MMK_L_beta" = {
"@MMK_R_lambda" = -10;
"@MMK_R_tau" = -10;
"@MMK_R_v" = -10;
};
"@MMK_L_c" = {
"@MMK_R_Y" = -50;
"@MMK_R_Zhe-cy" = -10;
"@MMK_R_j" = -10;
"@MMK_R_n" = 0;
"@MMK_R_o" = -10;
"@MMK_R_v" = -10;
};
"@MMK_L_chi" = {
"@MMK_R_T" = -40;
"@MMK_R_epsilon" = -70;
"@MMK_R_lambda" = -70;
"@MMK_R_n" = -40;
"@MMK_R_o" = -60;
"@MMK_R_pi" = -20;
"@MMK_R_rho" = -20;
"@MMK_R_tau" = -30;
"@MMK_R_theta" = -40;
"@MMK_R_v" = -30;
"@MMK_R_zeta" = -50;
};
"@MMK_L_de-cy" = {
"@MMK_R_Che-cy" = -30;
"@MMK_R_T" = -50;
"@MMK_R_Y" = -50;
"@MMK_R_che-cy" = -10;
"@MMK_R_n" = 0;
"@MMK_R_o" = -20;
"@MMK_R_te-cy" = -10;
"es-cy" = -10;
};
"@MMK_L_delta" = {
"@MMK_R_chi" = -60;
"@MMK_R_epsilon" = -10;
"@MMK_R_lambda" = -30;
"@MMK_R_n" = -18;
"@MMK_R_o" = -20;
"@MMK_R_tau" = -40;
"@MMK_R_v" = -50;
};
"@MMK_L_e" = {
"@MMK_R_Che-cy" = -20;
"@MMK_R_De-cy" = -10;
"@MMK_R_U-cy" = -10;
"@MMK_R_V" = -30;
"@MMK_R_Y" = -40;
"@MMK_R_Zhe-cy" = -20;
"@MMK_R_de-cy" = -30;
"@MMK_R_el-cy" = -20;
"@MMK_R_j" = -10;
"@MMK_R_l" = -10;
"@MMK_R_o" = -10;
"@MMK_R_s" = -20;
"@MMK_R_t" = 0;
"@MMK_R_te-cy" = -20;
"@MMK_R_v" = -10;
"@MMK_R_x" = -20;
"@MMK_R_zhe-cy" = -20;
};
"@MMK_L_eight" = {
"@MMK_R_eight" = -10;
"@MMK_R_five" = -10;
"@MMK_R_nine" = -30;
"@MMK_R_one" = -10;
"@MMK_R_seven" = -20;
"@MMK_R_zero" = -20;
};
"@MMK_L_epsilon" = {
"@MMK_R_T" = -40;
"@MMK_R_chi" = -20;
"@MMK_R_epsilon" = -10;
"@MMK_R_n" = -10;
"@MMK_R_o" = -20;
"@MMK_R_omega" = -10;
"@MMK_R_rho" = -10;
"@MMK_R_tau" = -10;
"@MMK_R_v" = -20;
"@MMK_R_xi" = -20;
};
"@MMK_L_f" = {
"@MMK_R_A" = -20;
"@MMK_R_V" = 10;
"@MMK_R_f" = -30;
"@MMK_R_f1" = -20;
"@MMK_R_g" = -20;
"@MMK_R_l" = -10;
"@MMK_R_o" = -20;
"@MMK_R_s" = -10;
"@MMK_R_t" = -20;
"@MMK_R_v" = 10;
"f.before-it" = -30;
icaron = 60;
icircumflex = 50;
idieresis = 0;
igrave = 50;
ihookabove = 20;
imacron = 50;
itilde = 40;
};
"@MMK_L_five" = {
"@MMK_R_nine" = -30;
"@MMK_R_one" = -10;
"@MMK_R_seven" = -20;
"@MMK_R_six" = 0;
"@MMK_R_three" = -10;
};
"@MMK_L_four" = {
"@MMK_R_eight" = 0;
"@MMK_R_seven" = -20;
"@MMK_R_three" = 0;
"@MMK_R_zero" = -10;
};
"@MMK_L_g" = {
"@MMK_R_T" = -30;
"@MMK_R_V" = -10;
"@MMK_R_Y" = -30;
"@MMK_R_g" = -10;
"@MMK_R_o" = -10;
"@MMK_R_s" = -10;
"@MMK_R_v" = -10;
"@MMK_R_x" = -14;
};
"@MMK_L_ge-cy" = {
"@MMK_R_de-cy" = -60;
"@MMK_R_el-cy" = -60;
"@MMK_R_o" = -20;
"@MMK_R_ya-cy" = -10;
};
"@MMK_L_i" = {
"@MMK_R_i" = 0;
"@MMK_R_n" = 10;
"@MMK_R_s" = -10;
};
"@MMK_L_k" = {
"@MMK_R_H" = -10;
"@MMK_R_O" = -20;
"@MMK_R_S" = -10;
"@MMK_R_U" = -10;
"@MMK_R_V" = -10;
"@MMK_R_Y" = -10;
"@MMK_R_Z" = 10;
"@MMK_R_f" = 20;
"@MMK_R_g" = -30;
"@MMK_R_o" = -30;
"@MMK_R_s" = -17;
"@MMK_R_t" = 20;
};
"@MMK_L_ka-cy" = {
"@MMK_R_el-cy" = -10;
"@MMK_R_l" = -20;
"@MMK_R_o" = -40;
"@MMK_R_v" = -20;
"@MMK_R_zhe-cy" = -10;
};
"@MMK_L_kappa" = {
"@MMK_R_epsilon" = -10;
"@MMK_R_o" = -10;
"@MMK_R_rho" = -10;
"@MMK_R_xi" = -10;
"@MMK_R_zeta" = -10;
};
"@MMK_L_l" = {
"@MMK_R_g" = -10;
"@MMK_R_l" = 10;
"@MMK_R_o" = -10;
"@MMK_R_s" = -10;
"@MMK_R_v" = -10;
};
"@MMK_L_lambda" = {
"@MMK_R_O" = -50;
"@MMK_R_chi" = -60;
"@MMK_R_epsilon" = -30;
"@MMK_R_n" = -30;
"@MMK_R_o" = -50;
"@MMK_R_pi" = -40;
"@MMK_R_tau" = -70;
"@MMK_R_theta" = -50;
"@MMK_R_v" = -80;
};
"@MMK_L_mu" = {
"@MMK_R_chi" = -50;
"@MMK_R_epsilon" = -10;
"@MMK_R_iota" = -10;
"@MMK_R_lambda" = 10;
"@MMK_R_o" = -30;
"@MMK_R_tau" = -40;
"@MMK_R_v" = -20;
omicron = -30;
};
"@MMK_L_n" = {
"@MMK_R_T" = -40;
"@MMK_R_Y" = -40;
"@MMK_R_chi" = -20;
"@MMK_R_de-cy" = 0;
"@MMK_R_g" = -10;
"@MMK_R_i" = 10;
"@MMK_R_n" = 0;
"@MMK_R_o" = 0;
"@MMK_R_s" = -10;
"@MMK_R_tau" = -10;
"@MMK_R_v" = -10;
"@MMK_R_x" = 0;
"@MMK_R_ya-cy" = -10;
"@MMK_R_ze-cy" = 0;
};
"@MMK_L_nine" = {
"@MMK_R_four" = 0;
"@MMK_R_nine" = -10;
"@MMK_R_seven" = -10;
};
"@MMK_L_nu" = {
"@MMK_R_epsilon" = -20;
"@MMK_R_lambda" = -30;
"@MMK_R_o" = -20;
"@MMK_R_rho" = -20;
"@MMK_R_xi" = -10;
};
"@MMK_L_o" = {
"@MMK_R_A" = -10;
"@MMK_R_Che-cy" = -30;
"@MMK_R_De-cy" = -40;
"@MMK_R_Ef-cy" = -10;
"@MMK_R_Ereversed-cy" = -10;
"@MMK_R_S" = -10;
"@MMK_R_T" = -60;
"@MMK_R_U-cy" = -20;
"@MMK_R_V" = -30;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -40;
"@MMK_R_Ya-cy" = -30;
"@MMK_R_Z" = -10;
"@MMK_R_Zhe-cy" = -30;
"@MMK_R_chi" = -40;
"@MMK_R_de-cy" = -40;
"@MMK_R_el-cy" = -40;
"@MMK_R_f" = -20;
"@MMK_R_g" = -20;
"@MMK_R_j" = -20;
"@MMK_R_l" = -10;
"@MMK_R_lambda" = -20;
"@MMK_R_n" = -10;
"@MMK_R_o" = -10;
"@MMK_R_pi" = -10;
"@MMK_R_rho" = -10;
"@MMK_R_s" = -20;
"@MMK_R_t" = -10;
"@MMK_R_tau" = -40;
"@MMK_R_te-cy" = -30;
"@MMK_R_u" = -20;
"@MMK_R_v" = -20;
"@MMK_R_x" = -30;
"@MMK_R_xi" = -10;
"@MMK_R_ya-cy" = -20;
"@MMK_R_z" = -20;
"@MMK_R_zeta" = -10;
"@MMK_R_zhe-cy" = -30;
"hardsign-cy" = -10;
};
"@MMK_L_one" = {
"@MMK_R_nine" = -30;
};
"@MMK_L_pi" = {
"@MMK_R_T" = -20;
"@MMK_R_epsilon" = -10;
"@MMK_R_iota" = -10;
"@MMK_R_n" = -10;
"@MMK_R_o" = -20;
"@MMK_R_omega" = -10;
"@MMK_R_rho" = -10;
};
"@MMK_L_r" = {
"@MMK_R_X" = -10;
"@MMK_R_Y" = -10;
"@MMK_R_Z" = -10;
"@MMK_R_f" = 10;
"@MMK_R_g" = -10;
"@MMK_R_l" = -10;
"@MMK_R_o" = -30;
"@MMK_R_t" = 10;
};
"@MMK_L_s" = {
"@MMK_R_H" = -10;
"@MMK_R_T" = -30;
"@MMK_R_V" = -20;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -30;
"@MMK_R_g" = -10;
"@MMK_R_l" = -10;
"@MMK_R_o" = -10;
"@MMK_R_s" = -10;
"@MMK_R_v" = -10;
"@MMK_R_x" = -20;
};
"@MMK_L_seven" = {
"@MMK_R_eight" = -10;
"@MMK_R_five" = -10;
"@MMK_R_four" = -60;
"@MMK_R_nine" = -20;
"@MMK_R_six" = -10;
"@MMK_R_three" = 0;
"@MMK_R_zero" = -10;
asciitilde.number = -30;
greater.number = -10;
hyphen.number = -20;
less.number = -20;
};
"@MMK_L_sigma" = {
"@MMK_R_epsilon" = -10;
"@MMK_R_lambda" = -30;
"@MMK_R_o" = -10;
"@MMK_R_omega" = -10;
"@MMK_R_pi" = 0;
"@MMK_R_rho" = -20;
};
"@MMK_L_sigmafinal" = {
"@MMK_R_o" = -20;
"@MMK_R_zeta" = -20;
};
"@MMK_L_six" = {
"@MMK_R_five" = -10;
"@MMK_R_nine" = -30;
"@MMK_R_one" = -10;
"@MMK_R_seven" = -20;
"@MMK_R_six" = -10;
"@MMK_R_three" = -10;
"@MMK_R_two" = -10;
"@MMK_R_zero" = -10;
};
"@MMK_L_softsign-cy" = {
"@MMK_R_Ef-cy" = -50;
"@MMK_R_O" = -20;
"@MMK_R_Y" = -100;
"@MMK_R_che-cy" = -30;
"@MMK_R_te-cy" = -40;
"@MMK_R_v" = -40;
"es-cy" = -10;
"hardsign-cy" = -40;
};
"@MMK_L_t" = {
"@MMK_R_A" = 20;
"@MMK_R_O" = -10;
"@MMK_R_T" = -20;
"@MMK_R_X" = -4;
"@MMK_R_Y" = -20;
"@MMK_R_g" = -31;
"@MMK_R_l" = -10;
"@MMK_R_n" = -10;
"@MMK_R_o" = -30;
"@MMK_R_s" = -20;
"@MMK_R_v" = -10;
"@MMK_R_x" = -10;
tbar = 0;
};
"@MMK_L_tau" = {
"@MMK_R_T" = -10;
"@MMK_R_lambda" = -10;
"@MMK_R_o" = -20;
"@MMK_R_xi" = -10;
};
"@MMK_L_te-cy" = {
"@MMK_R_A" = -20;
"@MMK_R_De-cy" = -30;
"@MMK_R_de-cy" = -40;
"@MMK_R_el-cy" = -30;
"@MMK_R_o" = -10;
"@MMK_R_v" = 10;
};
"@MMK_L_theta" = {
"@MMK_R_epsilon" = -10;
"@MMK_R_lambda" = -10;
};
"@MMK_L_three" = {
"@MMK_R_nine" = -20;
"@MMK_R_seven" = -10;
"@MMK_R_two" = -20;
"@MMK_R_zero" = -10;
};
"@MMK_L_two" = {
"@MMK_R_four" = -20;
"@MMK_R_nine" = -10;
"@MMK_R_seven" = -10;
"@MMK_R_three" = -10;
"@MMK_R_zero" = -10;
};
"@MMK_L_upsilon" = {
"@MMK_R_chi" = -30;
"@MMK_R_lambda" = -20;
"@MMK_R_n" = -10;
"@MMK_R_o" = -10;
"@MMK_R_rho" = -10;
"@MMK_R_tau" = -30;
"@MMK_R_v" = -20;
};
"@MMK_L_v" = {
"@MMK_R_A" = -20;
"@MMK_R_De-cy" = -50;
"@MMK_R_H" = -10;
"@MMK_R_T" = -10;
"@MMK_R_U-cy" = -10;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -20;
"@MMK_R_Zhe-cy" = -40;
"@MMK_R_de-cy" = -50;
"@MMK_R_el-cy" = -40;
"@MMK_R_f" = 10;
"@MMK_R_g" = -20;
"@MMK_R_l" = -10;
"@MMK_R_n" = 10;
"@MMK_R_o" = -10;
"@MMK_R_s" = -20;
"@MMK_R_t" = 14;
"@MMK_R_x" = -10;
"@MMK_R_z" = -10;
"@MMK_R_ze-cy" = -10;
};
"@MMK_L_ve-cy" = {
"@MMK_R_el-cy" = -10;
"@MMK_R_v" = -20;
"@MMK_R_zhe-cy" = -10;
};
"@MMK_L_x" = {
"@MMK_R_Ef-cy" = -20;
"@MMK_R_O" = -10;
"@MMK_R_T" = -10;
"@MMK_R_Y" = -10;
"@MMK_R_g" = -20;
"@MMK_R_n" = -7;
"@MMK_R_o" = -20;
"@MMK_R_s" = -20;
"@MMK_R_t" = 6;
"@MMK_R_v" = -10;
};
"@MMK_L_xi" = {
"@MMK_R_epsilon" = -40;
"@MMK_R_iota" = -10;
"@MMK_R_o" = -40;
"@MMK_R_tau" = -10;
"@MMK_R_v" = -10;
};
"@MMK_L_z" = {
"@MMK_R_A" = 10;
"@MMK_R_H" = -10;
"@MMK_R_O" = -10;
"@MMK_R_V" = -20;
"@MMK_R_Y" = -30;
"@MMK_R_g" = -30;
"@MMK_R_o" = -20;
};
"@MMK_L_ze-cy" = {
"@MMK_R_Che-cy" = -20;
"@MMK_R_o" = -10;
"@MMK_R_v" = -20;
"@MMK_R_zhe-cy" = -10;
};
"@MMK_L_zero" = {
"@MMK_R_eight" = -10;
"@MMK_R_five" = -10;
"@MMK_R_nine" = -20;
"@MMK_R_seven" = -30;
"@MMK_R_three" = -10;
"@MMK_R_two" = -30;
};
"@MMK_L_zeta" = {
"@MMK_R_epsilon" = -30;
"@MMK_R_o" = -30;
"@MMK_R_tau" = -10;
"@MMK_R_xi" = -20;
};
"@MMK_L_zhe-cy" = {
"@MMK_R_Che-cy" = -10;
"@MMK_R_Ef-cy" = -20;
"@MMK_R_o" = -30;
"@MMK_R_v" = 0;
};
Upsilon = {
"@MMK_R_Ef-cy" = -40;
};
alpha = {
"@MMK_R_chi" = -20;
"@MMK_R_n" = -10;
"@MMK_R_o" = -20;
"@MMK_R_tau" = -30;
"@MMK_R_theta" = -10;
"@MMK_R_v" = -20;
};
asciitilde.number = {
"@MMK_R_seven" = -30;
};
asterisk = {
"@MMK_R_seven" = -20;
};
backslash = {
backslash = -70;
};
"es-cy" = {
"@MMK_R_te-cy" = -10;
};
"f.before-it" = {
"@MMK_R_t" = -20;
"f.before-it" = -20;
};
greater.number = {
"@MMK_R_seven" = -30;
};
hyphen.number = {
"@MMK_R_seven" = -30;
};
less.number = {
"@MMK_R_seven" = -20;
};
parenleft = {
"@MMK_R_Sigma" = 40;
};
slash = {
slash = -160;
};
"t.before-it" = {
"@MMK_R_t" = -20;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
filter = "script == \"han\"";
name = "汉字";
type = ascender;
},
{
filter = "script == \"han\"";
name = "汉字";
type = descender;
},
{
filter = "script == \"kana\"";
name = "假名";
type = ascender;
},
{
filter = "script == \"kana\"";
name = "假名";
type = descender;
},
{
filter = "script == \"latin\"";
name = "西文斜度";
type = "italic angle";
},
{
filter = "script == \"han\"";
name = "汉字斜度";
type = "italic angle";
},
{
filter = "script == \"kana\"";
name = "假名斜度";
type = "italic angle";
},
{
name = Latin;
type = baseline;
},
{
filter = "category == \"Number\"";
name = Number;
type = "cap height";
},
{
filter = "script == \"cyrillic\"";
name = "西里尔斜度";
type = "italic angle";
},
{
filter = "script == \"greek\"";
name = Greek;
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright © 2022–2024 atelierAnchor. All rights reserved.";
}
);
},
{
key = designers;
values = (
{
language = dflt;
value = "oooooohmygosh, Nagisa Chen, Janine Sui, Heda Shi, Jian Li";
},
{
language = ZHS;
value = "oooooohmygosh, 陈渚, 眭佳宁, 史贺达, 李健";
}
);
},
{
key = designerURL;
value = "https://atelier-anchor.com";
},
{
key = familyNames;
values = (
{
language = dflt;
value = "Smiley Sans";
},
{
language = ZHS;
value = "得意黑";
}
);
},
{
key = licenses;
values = (
{
language = dflt;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This Font Software is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the SIL Open Font License for the specific language, permissions and limitations governing your use of this Font Software.";
}
);
},
{
key = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
key = manufacturers;
values = (
{
language = dflt;
value = atelierAnchor;
},
{
language = ZHS;
value = "atelierAnchor 锚坞";
}
);
},
{
key = manufacturerURL;
value = "https://atelier-anchor.com";
}
);
unitsPerEm = 1000;
userData = {
GSDimensionPlugin.Dimensions = {
m01 = {
HH = "95";
HV = "100";
OH = "95";
OV = "108";
};
};
};
versionMajor = 2;
versionMinor = 0;
}
